| package |
package := Package name: 'Monticello'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.102'.

package basicScriptAt: #postinstall put: '''Loaded: Monticello'' yourself.'.

package classNames
	add: #MCClassDefinition;
	add: #MCDefinition;
	add: #MCHttpRepositoryInfo;
	add: #MCHttpRepositoryInfoDialog;
	add: #MCMethodDefinition;
	add: #MCModificationTestCase;
	add: #MCOrganizationDefinition;
	add: #MCPatchBrowser;
	add: #MCRepositoryBrowser;
	add: #MCVersionDialog;
	add: #MCVersionName;
	yourself.

package methodNames
	add: #JadeServer32bit -> #mcInitialsA:;
	add: #JadeServer64bit -> #mcInitialsA:;
	add: #JadeServer64bit32 -> #gsPackagePolicy;
	add: #JadeTextDocument -> #jadeBrowseMonticello;
	add: #JadeToolsToolBarPresenter -> #browseMonticello;
	add: #MCAddition -> #initialize:;
	add: #MCModification -> #initialize:;
	add: #MCPackage -> #versionNames:;
	add: #MCRemoval -> #initialize:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Core\Object Arts\Dolphin\IDE\Base\Development System';
	add: '..\Core\Object Arts\Dolphin\Base\Dolphin';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Boolean\Dolphin Boolean Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Cards\Dolphin Card Containers';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Choice Prompter';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls';
	add: '..\Core\Object Arts\Dolphin\MVP\Dialogs\Common\Dolphin Common Dialogs';
	add: '..\Core\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Prompter';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Rich Text Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Scintilla\Dolphin Scintilla View';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters';
	add: '..\Core\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models';
	add: 'GemStone Session';
	add: 'Jade UI Base';
	add: '..\Core\Contributions\Camp Smalltalk\SUnit\SUnit';
	add: '..\Core\Object Arts\Dolphin\ActiveX\Shell\Windows Shell';
	yourself).

package!

"Class Definitions"!

Object subclass: #MCDefinition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #MCHttpRepositoryInfo
	instanceVariableNames: 'location user password'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #MCVersionName
	instanceVariableNames: 'name isLoaded isModified'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
MCDefinition subclass: #MCClassDefinition
	instanceVariableNames: 'className definition'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
MCDefinition subclass: #MCMethodDefinition
	instanceVariableNames: 'classIsMeta source category selector className timeStamp'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
MCDefinition subclass: #MCOrganizationDefinition
	instanceVariableNames: 'categories'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Dialog subclass: #MCHttpRepositoryInfoDialog
	instanceVariableNames: 'locationPresenter userPresenter passwordPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Dialog subclass: #MCVersionDialog
	instanceVariableNames: 'namePresenter messagePresenter repositoryListPresenter httpUserPresenter httpPasswordPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeShell subclass: #MCPatchBrowser
	instanceVariableNames: 'patch includeIdenticalPresenter operationListPresenter leftTextPresenter leftMemoPresenter rightTextPresenter rightMemoPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeShell subclass: #MCRepositoryBrowser
	instanceVariableNames: 'repositoryListPresenter packageListPresenter versionListPresenter repositoryCreationTemplatePresenter versionNamePresenter versionDatePresenter versionTimePresenter versionAuthorPresenter versionIDPresenter versionAncestorsPresenter versionStepChildrenPresenter versionMessagePresenter loadedVersionNames'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #MCModificationTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!JadeServer32bit methodsFor!

mcInitialsA: aString

	(System class includesSelector: #'_cacheName:') ifFalse: [^true].
	Exception
		category: nil
		number: nil
		do: [:ex :cat :num :args | ^false].
	super mcInitialsA: aString.
	^true.
! !
!JadeServer32bit categoriesFor: #mcInitialsA:!Monticello!public! !

!JadeServer64bit methodsFor!

mcInitialsA: aString

	^[
		super mcInitialsA: aString.
		true.
	] on: Error do: [:ex | 
		ex return: false.
	].
! !
!JadeServer64bit categoriesFor: #mcInitialsA:!Monticello!public! !

!JadeServer64bit32 methodsFor!

gsPackagePolicy

	| class |
	class := self gsPackagePolicyClass.
	class isNil ifTrue: [^nil].
	class enabled ifFalse: [^nil].
	^class current
! !
!JadeServer64bit32 categoriesFor: #gsPackagePolicy!public! !

!JadeTextDocument methodsFor!

jadeBrowseMonticello

	gciSession hasServer ifTrue: [
		^MCRepositoryBrowser showOnSession: gciSession.
	].
	MessageBox
		warning: 'Server initialization failed at login.'
		caption: 'Unable to Open Browser'.
! !
!JadeTextDocument categoriesFor: #jadeBrowseMonticello!Jade!private! !

!JadeToolsToolBarPresenter methodsFor!

browseMonticello

	MCRepositoryBrowser showOnSession: gciSession.
! !
!JadeToolsToolBarPresenter categoriesFor: #browseMonticello!public! !

!MCAddition methodsFor!

initialize: aStream

	definition := MCDefinition fromStream: aStream.
! !
!MCAddition categoriesFor: #initialize:!public! !

!MCModification methodsFor!

initialize: aStream

	obsoletion := MCDefinition fromStream: aStream.
	modification := MCDefinition fromStream: aStream.
! !
!MCModification categoriesFor: #initialize:!public! !

!MCPackage methodsFor!

versionNames: aList

	| list |
	list := aList asArray.
	list := list collect: [:each1 | 
		| pieces |
		pieces := each1 subStrings: $..
		pieces = #('current') ifTrue: [
			0 -> 'current'
		] ifFalse: [
			((pieces at: pieces size - 1) collect: [:each2 | each2 isDigit ifTrue: [each2] ifFalse: [$0]]) asNumber -> each1.
		].
	].
	list := list asSortedCollection.	"at first it seemed that the server provided them in order but that seems to not be consistent"
	list := list collect: [:each | MCVersionName new name: each value].
	versionNames := list.! !
!MCPackage categoriesFor: #versionNames:!accessing!public! !

!MCRemoval methodsFor!

initialize: aStream

	definition := MCDefinition fromStream: aStream.
! !
!MCRemoval categoriesFor: #initialize:!public! !

"End of package definition"!

