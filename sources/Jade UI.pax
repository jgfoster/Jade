| package |
package := Package name: 'Jade UI'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.204'.

package basicScriptAt: #postinstall put: '''Loaded: Jade UI'' yourself.'.

package classNames
	add: #JadeDebugger;
	add: #JadeErrorShell;
	add: #JadeFileIn;
	add: #JadePreferencesPresenter;
	add: #JadePreferencesShell;
	yourself.

package methodNames
	add: #GsError -> #debugError;
	add: #GsObject -> #gsInspect;
	add: #GsProcess -> #stepInto:;
	add: #GsProcess -> #stepOut:;
	add: #GsProcess -> #stepOver:;
	add: #GsProcess -> #terminate;
	add: #GsProcess -> #trimStackToLevel:;
	add: #JadeServer32bit -> #_oopAndStringFor:;
	add: #JadeServer32bit -> #_stepPointFromProcess:frame:method:level:;
	add: #JadeServer32bit -> #_trimStackOf:toLevel:;
	add: #JadeServer32bit -> #recompile:withSource:;
	add: #JadeServer32bit -> #sourceForProcess:frame:;
	add: #JadeServer64bit -> #_oopAndStringFor:;
	add: #JadeServer64bit -> #_stepPointFromProcess:frame:method:level:;
	add: #JadeServer64bit -> #_trimStackOf:toLevel:;
	add: #JadeServer64bit -> #sourceForProcess:frame:;
	add: #JadeServer64bit33 -> #_stepPointFromProcess:frame:method:level:;
	add: #JadeServer64bit33 -> #step:inFrame:;
	add: #JadeServer64bit34 -> #step:inFrame:;
	add: #JadeServer64bit3x -> #_stepPointsForBreaksInMethod:;
	add: #JadeTextDocument -> #fileIn;
	add: #JadeTextDocument -> #jadeInspect;
	add: #JadeToolsToolBarPresenter -> #jadePreferences;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Core\Object Arts\Dolphin\Base\Dolphin';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Boolean\Dolphin Boolean Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls';
	add: '..\Core\Object Arts\Dolphin\MVP\Dialogs\Common\Dolphin Common Dialogs';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Control Bars\Dolphin Control Bars';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Font\Dolphin Font Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\Core\Object Arts\Dolphin\MVP\Dialogs\Progress\Dolphin Progress Dialog';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters';
	add: '..\Core\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models';
	add: 'GemStone Session';
	add: 'Jade Method Browser';
	add: 'Jade UI Base';
	add: 'VisualWorks Component';
	yourself).

package!

"Class Definitions"!

Object subclass: #JadeFileIn
	instanceVariableNames: 'gciSession stream line words text category packageName'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #JadePreferencesPresenter
	instanceVariableNames: 'autoCommitPresenter autoMigratePresenter codeFontPresenter defaultFontPresenter nativeCodePresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeValueDialog subclass: #JadeErrorShell
	instanceVariableNames: 'messagePresenter stackPresenter textEditPresenter isResumable'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeTextDocument subclass: #JadeDebugger
	instanceVariableNames: 'answer errorMessagePresenter frame frameListOffset frameListPresenter gsProcess processList processListPresenter terminateOnClose variableDataPresenter variableListPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'debuggers'!
JadeShell subclass: #JadePreferencesShell
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!GsError methodsFor!

debugError

	^JadeDebugger reportError: self.

! !
!GsError categoriesFor: #debugError!public! !

!GsObject methodsFor!

gsInspect

	JadeInspector showOn: self oopType session: gciSession.
! !
!GsObject categoriesFor: #gsInspect!public! !

!GsProcess methodsFor!

stepInto: anInteger

	stack := nil.
	gciSession
		stepInto: self
		inFrame: anInteger.
!

stepOut: anInteger

	stack := nil.
	gciSession
		stepOut: self
		inFrame: anInteger.
!

stepOver: anInteger

	stack := nil.
	gciSession
		stepOver: self
		inFrame: anInteger.
!

terminate

	gciSession terminate: oopType.
	self error: 'Should not get here!!'.
!

trimStackToLevel: anInteger

	stack := nil.
	gciSession
		send: #'_trimStackToLevel:'
		to: self
		withAll: (Array with: anInteger).
! !
!GsProcess categoriesFor: #stepInto:!public! !
!GsProcess categoriesFor: #stepOut:!public! !
!GsProcess categoriesFor: #stepOver:!public! !
!GsProcess categoriesFor: #terminate!public! !
!GsProcess categoriesFor: #trimStackToLevel:!public! !

!JadeServer32bit methodsFor!

_oopAndStringFor: anObject

	Exception
		category: nil
		number: nil
		do: [:ex :cat :num :args | ^0 -> '<ERROR IN #printString>'].
	^super _oopAndStringFor: anObject.
!

_stepPointFromProcess: gsProcess frame: aFrame method: gsMethod level: anInteger

	^gsMethod
		_stepPointForIp: (aFrame at: 2) 
		level: anInteger 
		quick: false!

_trimStackOf: aGsProcess toLevel: anInteger

	Exception
		category: GemStoneError
		number: 2023 
		do: [:ex :cat :num :args | 
			ex remove.
			^self 
				_trimStackOf: aGsProcess 
				toLevel: anInteger - 1.
	].
	^super
		_trimStackOf: aGsProcess 
		toLevel: anInteger.
!

recompile: aMethod withSource: aString

	Exception
		category: nil 
		number: nil 
		do: [:ex :cat :num :args | ^'compile error found in JadeServer>>#compile:frame:process:'].
	^aMethod _recompileWithSource: aString.
!

sourceForProcess: gsProcess frame: level

	Exception
		category: nil
		number: nil
		do: [:ex :cat :num :args | 
			^self asAsciiString: ('?????' , ex printString , ' - ' , num printString , ' - ' ,  args printString , 
				Character cr asString , (GsProcess stackReportToLevel: 50))].
	^self
		_sourceForProcess: gsProcess 
		frame: level.
! !
!JadeServer32bit categoriesFor: #_oopAndStringFor:!Debugger!public! !
!JadeServer32bit categoriesFor: #_stepPointFromProcess:frame:method:level:!Debugger!public! !
!JadeServer32bit categoriesFor: #_trimStackOf:toLevel:!Debugger!public! !
!JadeServer32bit categoriesFor: #recompile:withSource:!Debugger!public! !
!JadeServer32bit categoriesFor: #sourceForProcess:frame:!Debugger!public! !

!JadeServer64bit methodsFor!

_oopAndStringFor: anObject

	^[
		super _oopAndStringFor: anObject.
	] on: Error do: [:ex | 
		ex return: 0 -> ('<ERROR IN #printString for ' , anObject class name , '>').
	].
!

_stepPointFromProcess: gsProcess frame: aFrame method: gsMethod level: anInteger

	^gsProcess _stepPointAt: anInteger
!

_trimStackOf: aGsProcess toLevel: anInteger

	^[
		super
			_trimStackOf: aGsProcess 
			toLevel: anInteger.
	] on: Error do: [:ex | 
		self 
			_trimStackOf: aGsProcess 
			toLevel: anInteger - 1.
		ex return.
	].
!

sourceForProcess: gsProcess frame: level

	^[
		self
			_sourceForProcess: gsProcess 
			frame: level.
	] on: Error do: [:ex | 
			ex return: (self asAsciiString: ('?????' , ex description , Character cr asString , (GsProcess stackReportToLevel: 50))).
	].
! !
!JadeServer64bit categoriesFor: #_oopAndStringFor:!Debugger!public! !
!JadeServer64bit categoriesFor: #_stepPointFromProcess:frame:method:level:!Debugger!public! !
!JadeServer64bit categoriesFor: #_trimStackOf:toLevel:!Debugger!public! !
!JadeServer64bit categoriesFor: #sourceForProcess:frame:!Debugger!public! !

!JadeServer64bit33 methodsFor!

_stepPointFromProcess: gsProcess frame: aFrame method: gsMethod level: anInteger
	"http://kermit.gemtalksystems.com/bug?bug=45553
	https://github.com/jgfoster/Jade/issues/51"

	| array homeMethod index localMethod localStepPoint sourceOffset |
	array := gsProcess _localStepPointAt: anInteger.
	localStepPoint := array at: 1.
	localMethod := array at: 2.
	sourceOffset := localMethod _sourceOffsetsAt: localStepPoint.
	homeMethod := self homeMethodFor: localMethod.
	^homeMethod _sourceOffsets indexOf: sourceOffset.
	!

step: aGsProcess inFrame: anInteger

	aGsProcess _stepOverInFrame: anInteger.
! !
!JadeServer64bit33 categoriesFor: #_stepPointFromProcess:frame:method:level:!Debugger!public! !
!JadeServer64bit33 categoriesFor: #step:inFrame:!Debugger!public!Socket! !

!JadeServer64bit34 methodsFor!

step: aGsProcess inFrame: anInteger

	aGsProcess _stepOverInFrame: anInteger.
! !
!JadeServer64bit34 categoriesFor: #step:inFrame:!Debugger!public!Socket! !

!JadeServer64bit3x methodsFor!

_stepPointsForBreaksInMethod: gsMethod
	"Presumably there is a way to do this, just not the same as 32-bit and 64-bit 2.x"

	^#()! !
!JadeServer64bit3x categoriesFor: #_stepPointsForBreaksInMethod:!Debugger!public! !

!JadeTextDocument methodsFor!

fileIn

	[
		JadeFileIn new
			fileInString: self activeTextEdit selection
			session: gciSession.
	] on: Error do: [:ex | 
		| stream |
		SessionManager current logError: ex.
		stream := WriteStream on: String new.
		ex printTraceOn: stream.
		(JadeWorkspace showOnSession: gciSession) showText: stream contents.
		MessageBox notify: ex description.
		SessionManager current pause.
	].
!

jadeInspect

	| result |

	result := self jadeExecuteAndDisplay: false.
	JadeInspector showOn: result session: gciSession.
! !
!JadeTextDocument categoriesFor: #fileIn!private! !
!JadeTextDocument categoriesFor: #jadeInspect!Jade!private! !

!JadeToolsToolBarPresenter methodsFor!

jadePreferences

	JadePreferencesShell showOnSession: gciSession.
! !
!JadeToolsToolBarPresenter categoriesFor: #jadePreferences!public! !

"End of package definition"!

