| package |
package := Package name: 'Jade User Browser'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.031'.


package classNames
	add: #AllUsersPresenter;
	add: #AllUsersShell;
	add: #UserListPresenter;
	add: #UserProfileDetailsPresenter;
	add: #UserProfilePasswordPresenter;
	add: #UserProfilePresenter;
	add: #UserProfileSetPresenter;
	yourself.

package methodNames
	add: #JadeServer32bit -> #addUser:toStream:;
	add: #JadeServer64bit -> #addUser:toStream:;
	add: #JadeTextDocument -> #jadeBrowseUsers;
	add: #JadeToolsToolBarPresenter -> #browseUsers;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Core\Object Arts\Dolphin\Base\Dolphin';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Boolean\Dolphin Boolean Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Cards\Dolphin Card Containers';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls';
	add: '..\Core\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Number\Dolphin Number Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Prompter';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter';
	add: '..\Core\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters';
	add: '..\Core\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models';
	add: 'GemStone Session';
	add: 'Jade UI Base';
	add: '..\Core\Contributions\Solutions Software\SSW EditableListView';
	yourself).

package!

"Class Definitions"!

JadePresenterA subclass: #AllUsersPresenter
	instanceVariableNames: 'userListPresenter userProfilePresenter passwordLimitsPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #UserListPresenter
	instanceVariableNames: 'userListPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #UserProfileDetailsPresenter
	instanceVariableNames: 'userIDPresenter maxLoginsPresenter languagePresenter lastLoginPresenter disabledReasonPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #UserProfilePasswordPresenter
	instanceVariableNames: 'whenPasswordChangedPresenter loginsRemainingPresenter isSpecialUserPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #UserProfilePresenter
	instanceVariableNames: 'user detailsPresenter passwordPresenter symbolListPresenter groupListPresenter privilegeListPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #UserProfileSetPresenter
	instanceVariableNames: 'disallowUsedPasswordsPresenter minPasswordSizePresenter maxPasswordSizePresenter maxRepeatingCharsPresenter maxConsecutiveCharsPresenter maxCharsOfSameTypePresenter staleAccountAgeLimitPresenter passwordAgeLimitPresenter passwordAgeWarningPresenter disallowedPasswordListPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeShell subclass: #AllUsersShell
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!JadeServer32bit methodsFor!

addUser: aUserProfile toStream: aStream

	Exception
		category: nil
		number: nil
		do: [:ex :cat :num :args | aStream lf. ^self].
	super
		addUser: aUserProfile 
		toStream: aStream.
! !
!JadeServer32bit categoriesFor: #addUser:toStream:!public!UserProfile! !

!JadeServer64bit methodsFor!

addUser: aUserProfile toStream: aStream

	[
		super
			addUser: aUserProfile 
			toStream: aStream.
	] on: Error do: [:ex | 
		aStream lf.
		ex return.
	].
! !
!JadeServer64bit categoriesFor: #addUser:toStream:!public!UserProfile! !

!JadeTextDocument methodsFor!

jadeBrowseUsers

	gciSession hasServer ifTrue: [
		^AllUsersShell showOnSession: gciSession.
	].
	MessageBox
		warning: 'Server initialization failed at login.'
		caption: 'Unable to Open Browser'.
! !
!JadeTextDocument categoriesFor: #jadeBrowseUsers!Jade!private! !

!JadeToolsToolBarPresenter methodsFor!

browseUsers

	AllUsersShell showOnSession: gciSession.
! !
!JadeToolsToolBarPresenter categoriesFor: #browseUsers!public! !

"End of package definition"!

