| package |
package := Package name: 'Rowan UI Tests'.
package paxVersion: 1;
	basicComment: ''.


package classNames
	add: #JadeiteAbstractTestCase;
	add: #JadeiteDebuggerTestCase;
	add: #JadeiteDictionaryBrowserTestCase;
	add: #JadeiteInspectorTestCase;
	add: #JadeiteMessageBoxTestCase;
	add: #JadeiteProjectBrowserTestCase;
	add: #JadeiteTestResource;
	add: #TestMessageBox;
	yourself.

package methodNames
	add: 'MessageBox class' -> #new;
	add: 'TestResource class' -> #signalInitializationError;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Core\Object Arts\Dolphin\Base\Dolphin';
	add: '..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\Core\Object Arts\Dolphin\MVP\Views\Scintilla\Dolphin Scintilla View';
	add: '..\Core\Object Arts\Dolphin\MVP\Presenters\Tree\Dolphin Tree Presenter';
	add: 'GemStone Session';
	add: 'Jade UI Base';
	add: 'Rowan UI Base';
	add: '..\Core\Contributions\Camp Smalltalk\SUnit\SUnit';
	yourself).

package!

"Class Definitions"!

MessageBox subclass: #TestMessageBox
	instanceVariableNames: ''
	classVariableNames: 'PlannedResult'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #JadeiteAbstractTestCase
	instanceVariableNames: 'session transcript'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteDebuggerTestCase
	instanceVariableNames: 'debugger gsProcess process'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteDictionaryBrowserTestCase
	instanceVariableNames: 'dictionaryBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteInspectorTestCase
	instanceVariableNames: 'inspector'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteMessageBoxTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteProjectBrowserTestCase
	instanceVariableNames: 'projectsBrowser dictionaryBrowser transcriptWritesWereEnabled'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestResource subclass: #JadeiteTestResource
	instanceVariableNames: 'session transcript'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!MessageBox class methodsFor!

new
	"#JadeiteTestsActive should never be present without the tests loaded"

	| testsActive |
	testsActive := Smalltalk at: #JadeiteTestsActive ifAbsent: [^self basicNew initialize].
	^testsActive
		ifTrue: [(Smalltalk at: #TestMessageBox) basicNew initialize]
		ifFalse: [self basicNew initialize] ! !
!MessageBox class categoriesFor: #new!instance creation!public! !

!TestResource class methodsFor!

signalInitializationError
	"TestSuite>>run: in the SUnit pacakge sends this method
	to the class, but implements it on the instance. That appears
	to be a bug."

	self reset.
	^TestResult signalErrorWith: 'Resource ' , self name , ' could not be initialized'! !
!TestResource class categoriesFor: #signalInitializationError!error handling!public! !

"End of package definition"!

