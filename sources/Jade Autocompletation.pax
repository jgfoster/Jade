| package |
package := Package name: 'Jade Autocompletation'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.066'.


package classNames
	add: #JadeAutocompletationConfiguration;
	add: #JadeAutocompletationConfigurationPresenter;
	add: #JadeAutocompletationConfigurationShell;
	add: #JadeAutocompletationRegistry;
	add: #JadeAutoMap;
	add: #JadeAutoTextPresenter;
	add: #JadeAutoTextPresenter3;
	add: #JadeGsClassShape;
	add: #JadeMapAutocompletationPresenter;
	add: #JadeMaximizedCodePresenter;
	add: #JadeMaximizedCodeShell;
	add: #JadeParamAutocompletationPresenter;
	add: #JadeRegistryPresenter;
	yourself.

package methodNames
	add: #CodeSourcePresenter -> #createComponents;
	add: #CodeSourcePresenter -> #hasClassSideSelected;
	add: #JadeMethodListPresenter -> #getSelectedClassName;
	add: #JadeMethodListPresenter -> #hasClassSideSelected;
	add: #JadePresenterA -> #registry;
	add: #JadeTextDocument -> #hasClassSideSelected;
	add: #JadeTextDocument -> #registry;
	add: #MethodSourcePresenter -> #hasClassSideSelected;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Boolean\Dolphin Boolean Presenter'
	'..\Core\Object Arts\Dolphin\MVP\Views\Cards\Dolphin Card Containers'
	'..\Core\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls'
	'..\Core\Object Arts\Dolphin\MVP\Views\Control Bars\Dolphin Control Bars'
	'..\Core\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter'
	'..\Core\Object Arts\Dolphin\Base\Dolphin Message Box'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'..\Core\Object Arts\Dolphin\MVP\Views\Scintilla\Dolphin Scintilla View'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter'
	'..\Core\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters'
	'..\Core\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models'
	'Jade Inspector'
	'Jade Method Browser'
	'Jade UI Base'
	'..\Core\Object Arts\Dolphin\System\Compiler\Smalltalk Parser').

package!

"Class Definitions"!

Object subclass: #JadeAutocompletationConfiguration
	instanceVariableNames: 'isEnabled logEnabled filterObjectMethods filterPrimitiveMethods hideClassVars hideInstClassVars hidePoolDictionaries'
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #JadeAutocompletationRegistry
	instanceVariableNames: 'registry variableMap paramMap'
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #JadeAutoMap
	instanceVariableNames: 'name gsClassShapeName'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #JadeGsClassShape
	instanceVariableNames: 'name gsInstVariables gsClassVariables gsInstClassVariables gsPoolDictionaries gsMethods gsClassMethods gsClassHierarchy'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenter subclass: #JadeMaximizedCodePresenter
	instanceVariableNames: 'parentMethodPresenter codePresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #JadeAutocompletationConfigurationPresenter
	instanceVariableNames: 'isEnabledPresenter logEnabledPresenter filterObjectPresenter filterPrimitivePresenter hideClassVarPresenter hideInstClassVarPresenter hidePoolDictionariesPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #JadeMapAutocompletationPresenter
	instanceVariableNames: 'namePresenter gsClassListPresenter mapPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #JadeParamAutocompletationPresenter
	instanceVariableNames: 'methodNamePresenter paramPresenter paramsPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #JadeRegistryPresenter
	instanceVariableNames: 'registryPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Shell subclass: #JadeAutocompletationConfigurationShell
	instanceVariableNames: 'configurationComposite registryComposite mapingComposite paramComposite'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeShell subclass: #JadeMaximizedCodeShell
	instanceVariableNames: 'maximizedPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeTextPresenter subclass: #JadeAutoTextPresenter
	instanceVariableNames: 'lastGsShape lastWord lastCharacter currentWord temporaries arguments altMode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeTextPresenter subclass: #JadeAutoTextPresenter3
	instanceVariableNames: 'currentGsShape currentText previousText currentStyleName previousStyleName lastTimeKey wordRightSideIsEmpty lastParsedResult lastTextSelection'
	classVariableNames: 'ReplacementDictionary'
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!CodeSourcePresenter methodsFor!

createComponents

	super createComponents.
	documentPresenter := self add: JadeAutoTextPresenter3 new name: 'document'.
	self updateCodeFont.!

hasClassSideSelected
	^parentPresenter hasClassSideSelected! !
!CodeSourcePresenter categoriesFor: #createComponents!public! !
!CodeSourcePresenter categoriesFor: #hasClassSideSelected!public! !

!JadeMethodListPresenter methodsFor!

getSelectedClassName

	^(self selectedClass name subStrings: ' ') first!

hasClassSideSelected

	^(self selectedClass name subStrings: ' ') last = 'class'! !
!JadeMethodListPresenter categoriesFor: #getSelectedClassName!public! !
!JadeMethodListPresenter categoriesFor: #hasClassSideSelected!public! !

!JadePresenterA methodsFor!

registry

	^JadeAutocompletationRegistry default! !
!JadePresenterA categoriesFor: #registry!autocompletion!public! !

!JadeTextDocument methodsFor!

hasClassSideSelected
	
	documentPresenter currentText  isEmpty ifTrue: [^false].

	^documentPresenter currentText first isUpperCase!

registry

	^JadeAutocompletationRegistry default! !
!JadeTextDocument categoriesFor: #hasClassSideSelected!public! !
!JadeTextDocument categoriesFor: #registry!autocompletion!private! !

!MethodSourcePresenter methodsFor!

hasClassSideSelected
	^parentPresenter hasClassSideSelected! !
!MethodSourcePresenter categoriesFor: #hasClassSideSelected!public! !

"End of package definition"!

