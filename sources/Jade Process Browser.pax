| package |
package := Package name: 'Jade Process Browser'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.014'.


package classNames
	add: #JadeProcessBrowser;
	yourself.

package methodNames
	add: #JadeServer -> #_addProcess:to:withStatus:scheduler:;
	add: #JadeServer -> #_addProcess2:to:withStatus:scheduler:;
	add: #JadeServer -> #_waitingProcesses;
	add: #JadeServer -> #processes;
	add: #JadeServer64bit33 -> #_waitingProcesses;
	add: #JadeServer64bit3x -> #_addProcess:to:withStatus:scheduler:;
	add: #JadeServer64bit3x -> #_addProcess2:to:withStatus:scheduler:;
	add: #JadeTranscript -> #browseProcesses;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry'
	'..\Core\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls'
	'..\Core\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'GemStone Objects'
	'GemStone Session'
	'Jade Inspector'
	'Jade Transcript'
	'Jade UI'
	'Jade UI Base').

package!

"Class Definitions"!

JadeShell subclass: #JadeProcessBrowser
	instanceVariableNames: 'prioritiesPresenter processesPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!JadeServer methodsFor!

_addProcess: aProcess to: aStream withStatus: aString scheduler: aScheduler

	aStream lf
"1"		nextPutAll: aString; tab;
"2"		nextPutAll: aProcess asOop printString; tab;
"3"		nextPutAll: aProcess priority printString; tab;
"4"		nextPutAll: (aProcess createdByApplication ifTrue: ['Y'] ifFalse: ['']); tab; 
"5"		"stackId"
"6"		"waitingOn"
"7"		"_signalTime"
"8"		"continuation type"
"9"		"type: forked or main"
"10"		"live or terminated"
		yourself.
	self _addProcess2: aProcess to: aStream withStatus: aString scheduler: aScheduler.!

_addProcess2: aProcess to: aStream withStatus: aString scheduler: aScheduler

	aStream 
"5"		tab;	"stackId"
"6"		tab;	"waitingOn"
"7"		tab;	"_signalTime"
"8"		tab;	"continuation type"
"9"		"type: forked or main"
"10"		"live or terminated"
		yourself.!

_waitingProcesses

	^ProcessorScheduler scheduler waitingProcesses
!

processes

	| scheduler stream |
	scheduler := ProcessorScheduler scheduler.
	stream := self _writeStreamOnString
		nextPutAll: 'highestPriority'; 			space; nextPutAll: scheduler highestPriority 			printString; tab;
		nextPutAll: 'highIOPriority'; 				space; nextPutAll: scheduler highIOPriority 			printString; tab;
		nextPutAll: 'lowestPriority'; 				space; nextPutAll: scheduler lowestPriority 			printString; tab;
		nextPutAll: 'lowIOPriority'; 				space; nextPutAll: scheduler lowIOPriority 			printString; tab;
		nextPutAll: 'systemBackgroundPriority'; 	space; nextPutAll: scheduler systemBackgroundPriority printString; tab;
		nextPutAll: 'timingPriority'; 				space; nextPutAll: scheduler timingPriority 			printString; tab;
		nextPutAll: 'userBackgroundPriority'; 		space; nextPutAll: scheduler userBackgroundPriority 	printString; tab;
		nextPutAll: 'userInterruptPriority'; 		space; nextPutAll: scheduler userInterruptPriority 		printString; tab;
		nextPutAll: 'userSchedulingPriority'; 		space; nextPutAll: scheduler userSchedulingPriority 	printString; tab;
		yourself.
	scheduler readyProcesses 		do: [:each | self _addProcess: each to: stream withStatus: 'ready'		scheduler: scheduler].
	scheduler suspendedProcesses 	do: [:each | self _addProcess: each to: stream withStatus: 'suspended'	scheduler: scheduler].
	self _waitingProcesses		do: [:each | self _addProcess: each to: stream withStatus: 'waiting'		scheduler: scheduler].
	^self _encodeString: stream contents.

! !
!JadeServer categoriesFor: #_addProcess:to:withStatus:scheduler:!private!Processes! !
!JadeServer categoriesFor: #_addProcess2:to:withStatus:scheduler:!private!Processes! !
!JadeServer categoriesFor: #_waitingProcesses!private!Processes! !
!JadeServer categoriesFor: #processes!Processes!public! !

!JadeServer64bit33 methodsFor!

_waitingProcesses

	| processToIgnore |
	processToIgnore := Processor activeProcess environmentAt: #'parent' ifAbsent: [nil].
	^ProcessorScheduler scheduler waitingProcesses reject: [:each | each == processToIgnore]

! !
!JadeServer64bit33 categoriesFor: #_waitingProcesses!private!Processes! !

!JadeServer64bit3x methodsFor!

_addProcess: aProcess to: aStream withStatus: aString scheduler: aScheduler

	| instVarNumber modeInfo modeInfo_forked modeInfo_terminated |
	super _addProcess: aProcess to: aStream withStatus: aString scheduler: aScheduler.
	(instVarNumber := GsProcess instVarNames indexOf: #'modeInfo') == 0 ifTrue: [^self].
	modeInfo := aProcess instVarAt: instVarNumber.
	(modeInfo_forked := GsProcess _classVars at: #'ModeInfo_forked' ifAbsent: [nil]) ifNil: [^self].
	(modeInfo_terminated := GsProcess _classVars at: #'ModeInfo_terminated' ifAbsent: [nil]) ifNil: [^self].
	aStream
"9"		nextPutAll: (0 < (modeInfo bitAnd: modeInfo_forked) ifTrue: ['forked'] ifFalse: ['main']); tab;
"10"		nextPutAll: (0 < (modeInfo bitAnd: modeInfo_terminated) ifTrue: ['terminated'] ifFalse: ['']); tab;
		yourself.
!

_addProcess2: aProcess to: aStream withStatus: aString scheduler: aScheduler

	| x |
	aStream 
"5"		nextPutAll: ((x := aProcess stackId) == -1 	ifTrue: [''] 		ifFalse: [x printString]); tab;
"6"		nextPutAll: ((x := aProcess waitingOn) isNil 	ifTrue: [''] 		ifFalse: [x asOop printString]); tab;
"7"		nextPutAll: ((x := aProcess _signalTime) isNil ifTrue: [''] 		ifFalse: [(x - aScheduler _now) printString]); tab;
"8"		nextPutAll: (aProcess isPartialContinuation	ifTrue: ['partial'] ifFalse: [aProcess isContinuation ifTrue: ['full'] ifFalse: ['']]); tab;
"9"		"type: forked or main"
"10"		"live or terminated"
		yourself.
! !
!JadeServer64bit3x categoriesFor: #_addProcess:to:withStatus:scheduler:!private!Processes! !
!JadeServer64bit3x categoriesFor: #_addProcess2:to:withStatus:scheduler:!private!Processes! !

!JadeTranscript methodsFor!

browseProcesses

	JadeProcessBrowser showOnSession: gciSession.
! !
!JadeTranscript categoriesFor: #browseProcesses!public! !

"End of package definition"!

