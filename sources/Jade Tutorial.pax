| package |
package := Package name: 'Jade Tutorial'.
package paxVersion: 1;
	basicComment: ''.


package classNames
	add: #GemStoneSyntaxTutorial;
	add: #GsProfStef;
	yourself.

package methodNames
	add: #JadeServer -> #addProfStef;
	add: #JadeServer -> #newProfStefClass;
	add: #JadeServer64bit -> #newProfStefClass;
	add: #JadeServer64bit32 -> #newProfStefClass;
	add: #JadeTranscript -> #profStef;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Core\Object Arts\Dolphin\Base\Dolphin';
	add: '..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\Core\Object Arts\Dolphin\MVP\Icons\Dolphin Text Tile Icons';
	add: 'GemStone Objects';
	add: 'GemStone Session';
	add: 'Jade Transcript';
	add: 'Jade UI Base';
	add: '..\Core\Object Arts\Dolphin\Utilities\Tutorials\Learn Smalltalk';
	add: '..\Core\Object Arts\Dolphin\Utilities\Tutorials\Tutorial Player';
	yourself).

package!

"Class Definitions"!

SmalltalkSyntaxTutorial subclass: #GemStoneSyntaxTutorial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeWorkspace subclass: #GsProfStef
	instanceVariableNames: 'dictionaryName index tutorial'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'current'!

"Global Aliases"!


"Loose Methods"!

!JadeServer methodsFor!

addProfStef

	| dictionary profStef symbolList |
	symbolList := GsSession currentSession symbolList.
	profStef := symbolList objectNamed: #'ProfStef'.
	profStef notNil ifTrue: [^self].
	profStef := self newProfStefClass.
	dictionary := symbolList
		detect: [:each | System canWrite: each]
		ifNone: [nil].
	dictionary ifNil: [self error: 'Unable to add ProfStef to current SymbolList (none of the Dictionaries are writeable!!'].
	dictionary at: #'ProfStef' put: profStef.
	profStef class 
		compileMethod: 'send: aSymbol (ClientForwarderSend new receiver: self clientObj: 3 selector: aSymbol args: #()) defaultAction' dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'first		self send: #first'		dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'go		self send: #first'		dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'next	self send: #next'	dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'previous	self send: #previous'	dictionaries: symbolList category: 'ProfStef';
		yourself.
	self commit.
	^dictionary name
!

newProfStefClass

	^Object subclass: 'ProfStef'
		instVarNames: ''
		classVars: #()
		classInstVars: #()
		poolDictionaries: #()
		inDictionary: SymbolDictionary new
		constraints: #()
		instancesInvariant: false
		isModifiable: false! !
!JadeServer categoriesFor: #addProfStef!public!Tutorial! !
!JadeServer categoriesFor: #newProfStefClass!public!Tutorial! !

!JadeServer64bit methodsFor!

newProfStefClass

	^Object subclass: 'ProfStef'
		instVarNames: ''
		classVars: #()
		classInstVars: #()
		poolDictionaries: #()
		inDictionary: SymbolDictionary new
		instancesInvariant: false
		isModifiable: false
! !
!JadeServer64bit categoriesFor: #newProfStefClass!public!Tutorial! !

!JadeServer64bit32 methodsFor!

newProfStefClass

	^Object subclass: 'ProfStef'
		instVarNames: #()
		classVars: #()
		classInstVars: #()
		poolDictionaries: #()
		inDictionary: SymbolDictionary new! !
!JadeServer64bit32 categoriesFor: #newProfStefClass!public!Tutorial! !

!JadeTranscript methodsFor!

profStef

	GsProfStef showOnSession: gciSession.! !
!JadeTranscript categoriesFor: #profStef!event handling!public! !

"End of package definition"!

