| package |
package := Package name: 'Jade Tutorial'.
package paxVersion: 1;
	basicComment: ''.


package classNames
	add: #GemStoneSyntaxTutorial;
	add: #GsProfStef;
	yourself.

package methodNames
	add: #GciLibrary -> #isProfStefAvailable;
	add: #GciSession -> #isProfStefAvailable;
	add: #JadeServer64bit32 -> #addProfStef;
	add: #JadeServer64bit32 -> #newProfStefClass;
	add: #JadeServer64bit32 -> #removeProfStef;
	add: #JadeTranscript -> #profStef;
	add: #LibGciRpc64_3_2_0 -> #isProfStefAvailable;
	add: #LibGciRpc64_3_3_0 -> #isProfStefAvailable;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Core\Object Arts\Dolphin\Base\Dolphin Message Box'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'..\Core\Object Arts\Dolphin\MVP\Icons\Dolphin Text Tile Icons'
	'GemStone C Interface'
	'GemStone Objects'
	'GemStone Session'
	'Jade Transcript'
	'Jade UI Base'
	'..\Core\Object Arts\Dolphin\Utilities\Tutorials\Learn Smalltalk'
	'..\Core\Object Arts\Dolphin\Utilities\Tutorials\Tutorial Player').

package!

"Class Definitions"!

SmalltalkSyntaxTutorial subclass: #GemStoneSyntaxTutorial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeWorkspace subclass: #GsProfStef
	instanceVariableNames: 'dictionaryName index tutorial'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'current'!

"Global Aliases"!


"Loose Methods"!

!GciLibrary methodsFor!

isProfStefAvailable

	^false! !
!GciLibrary categoriesFor: #isProfStefAvailable!public! !

!GciSession methodsFor!

isProfStefAvailable

	^library isProfStefAvailable! !
!GciSession categoriesFor: #isProfStefAvailable!accessing!public! !

!JadeServer64bit32 methodsFor!

addProfStef

	| dictionary profStef symbolList |
	symbolList := GsSession currentSession symbolList.
	profStef := symbolList objectNamed: #'ProfStef'.
	profStef notNil ifTrue: [^profStef].
	profStef := self newProfStefClass.
	dictionary := symbolList
		detect: [:each | System canWrite: each]
		ifNone: [nil].
	dictionary ifNil: [self error: 'Unable to add ProfStef to current SymbolList (none of the Dictionaries are writeable!!'].
	dictionary at: #'ProfStef' put: profStef.
	profStef class 
		compileMethod: 'send: aSymbol with: args
	(ClientForwarderSend new 
		receiver: self 
		clientObj: 3 
		selector: aSymbol 
		args: args) defaultAction' 	dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'first
	self send: #first with: #()'		dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'goto: anInteger
	self send: #goto: with: (Array with: anInteger)'	dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'go
	self send: #first with: #()'		dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'next
	self send: #next with: #()'		dictionaries: symbolList category: 'ProfStef';
		compileMethod: 'previous
	self send: #previous with: #()'	dictionaries: symbolList category: 'ProfStef';
		yourself.
	self commit.
	^dictionary name
!

newProfStefClass

	^Object subclass: 'ProfStef'
		instVarNames: #()
		classVars: #()
		classInstVars: #()
		poolDictionaries: #()
		inDictionary: SymbolDictionary new!

removeProfStef

	| profStef symbolList |
	symbolList := GsSession currentSession symbolList.
	profStef := symbolList objectNamed: #'ProfStef'.
	profStef isNil ifTrue: [^self].
	(symbolList dictionariesAndSymbolsOf: profStef) do: [:each | 
		(each at: 1) removeKey: (each at: 2).
	].
! !
!JadeServer64bit32 categoriesFor: #addProfStef!public!Tutorial! !
!JadeServer64bit32 categoriesFor: #newProfStefClass!public!Tutorial! !
!JadeServer64bit32 categoriesFor: #removeProfStef!public!Tutorial! !

!JadeTranscript methodsFor!

profStef

	GsProfStef showOnSession: gciSession.! !
!JadeTranscript categoriesFor: #profStef!event handling!public! !

!LibGciRpc64_3_2_0 methodsFor!

isProfStefAvailable

	^true! !
!LibGciRpc64_3_2_0 categoriesFor: #isProfStefAvailable!public! !

!LibGciRpc64_3_3_0 methodsFor!

isProfStefAvailable

	^true! !
!LibGciRpc64_3_3_0 categoriesFor: #isProfStefAvailable!public! !

"End of package definition"!

